"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[916],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(a),u=n,g=d["".concat(s,".").concat(u)]||d[u]||h[u]||i;return a?r.createElement(g,o(o({ref:t},c),{},{components:a})):r.createElement(g,o({ref:t},c))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2730:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const i={sidebar_position:2,slug:"staging-patches",title:"Staging Patches",sidebar_label:"\ud83d\udea6 Staging Patches",description:"Stage, validate, and promote patches"},o="Staging Patches",l={unversionedId:"guides/staging-patches",id:"guides/staging-patches",title:"Staging Patches",description:"Stage, validate, and promote patches",source:"@site/docs/guides/staging-patches.md",sourceDirName:"guides",slug:"/guides/staging-patches",permalink:"/guides/staging-patches",draft:!1,editUrl:"https://github.com/shorebirdtech/docs/tree/main/docs/guides/staging-patches.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,slug:"staging-patches",title:"Staging Patches",sidebar_label:"\ud83d\udea6 Staging Patches",description:"Stage, validate, and promote patches"},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udf4e iOS",permalink:"/guides/release/ios"},next:{title:"\ud83d\ude91 Crash Reporting",permalink:"/guides/crash-reporting"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a Project",id:"create-a-project",level:2},{value:"Initialize Shorebird",id:"initialize-shorebird",level:2},{value:"Create a release",id:"create-a-release",level:2},{value:"Creating a patch",id:"creating-a-patch",level:2},{value:"Preview the release",id:"preview-the-release",level:2},{value:"Promote the patch",id:"promote-the-patch",level:2}],c={toc:p},d="wrapper";function h(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"staging-patches"},"Staging Patches"),(0,n.kt)("p",null,"This guide will walk through how to validate a patch in Shorebird's staging environment before promoting the patch to production."),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("p",null,"This guide assumes the Shorebird command-line is installed on your machine and that you are logged into an account. Refer to the ",(0,n.kt)("a",{parentName:"p",href:"/"},"getting started")," instructions for more information."),(0,n.kt)("h2",{id:"create-a-project"},"Create a Project"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"In this guide, we'll go through the process of creating a new project from scratch. To apply these changes to an existing project, skip this step and read ahead.")),(0,n.kt)("p",null,"Create a new project using ",(0,n.kt)("inlineCode",{parentName:"p"},"flutter create example --empty"),"."),(0,n.kt)("h2",{id:"initialize-shorebird"},"Initialize Shorebird"),(0,n.kt)("p",null,"Next, initialize Shorebird in the current project via ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird init"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"shorebird init\n")),(0,n.kt)("p",null,"The generated ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird.yaml")," should look something like:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"# Your app_id is not a secret and is just used to identify your app\n# when requesting patches from Shorebird's servers.\napp_id: ee322dc4-3dc2-4324-90a9-04c40a62ae76\n# auto_update controls if Shorebird should automatically update in the background on launch.\n# If auto_update: false, you will need to use package:shorebird_code_push to trigger updates.\n# https://pub.dev/packages/shorebird_code_push\n# Uncomment the following line to disable automatic updates.\n# auto_update: false\n")),(0,n.kt)("h2",{id:"create-a-release"},"Create a release"),(0,n.kt)("p",null,"Now that we've created our apps on shorebird, we need to create releases (one for each platform). To create a release, we'll use the ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird release")," command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"# Create a release for Android\nshorebird release android\n\n# Create a release for iOS\nshorebird release ios\n")),(0,n.kt)("p",null,"We can verify the releases were created successfully by visiting ",(0,n.kt)("a",{parentName:"p",href:"https://console.shorebird.dev"},"Shorebird console"),"."),(0,n.kt)("p",null,"You should also ",(0,n.kt)("a",{parentName:"p",href:"/guides/release/android#upload-to-the-play-store"},"submit the generated app bundles to the Play Store")," and ",(0,n.kt)("a",{parentName:"p",href:"/guides/release/ios#upload-to-the-app-store"},"submit the generated ipa to the App Store"),"."),(0,n.kt)("h2",{id:"creating-a-patch"},"Creating a patch"),(0,n.kt)("p",null,"Now that we have our releases on the Play Store and App Store, we can create a patch using ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird patch"),". For the sake of this example, let's set the ",(0,n.kt)("inlineCode",{parentName:"p"},"backgroundColor")," of the ",(0,n.kt)("inlineCode",{parentName:"p"},"Scaffold")," to ",(0,n.kt)("inlineCode",{parentName:"p"},"Colors.cyan")," in ",(0,n.kt)("inlineCode",{parentName:"p"},"lib/main.dart"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff"},"import 'package:flutter/material.dart';\n\nvoid main() {\n  runApp(const MainApp());\n}\n\nclass MainApp extends StatelessWidget {\n  const MainApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return const MaterialApp(\n      home: Scaffold(\n+       backgroundColor: Colors.cyan,\n        body: Center(\n          child: Text('Hello World!'),\n        ),\n      ),\n    );\n  }\n}\n\n")),(0,n.kt)("p",null,"Now that we've applied the changes, let's create a patch:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"# Stage a patch on Android\nshorebird patch android --staging\n\n# Stage a patch on iOS\nshorebird patch ios --staging\n")),(0,n.kt)("h2",{id:"preview-the-release"},"Preview the release"),(0,n.kt)("p",null,"Next, preview the app release locally on a device or emulator, use ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird preview"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"# Preview the release in the staging environment\nshorebird preview --staging --app-id ee322dc4-3dc2-4324-90a9-04c40a62ae76 --release-version 1.0.0+1\n")),(0,n.kt)("p",null,"Shorebird will download the release and run it on your device in the staging environment."),(0,n.kt)("p",null,"The first time the app is re-launched, we should still see the white ",(0,n.kt)("inlineCode",{parentName:"p"},"Scaffold")," and shorebird will detect and install the patch in the background. Kill and re-launch the app a second time to see the applied patch with the cyan ",(0,n.kt)("inlineCode",{parentName:"p"},"Scaffold")," background."),(0,n.kt)("p",null,"If all went well, you should see the patch was applied after re-launching the app a second time. Congrats, you've validated your patch in the staging environment \ud83e\udd73"),(0,n.kt)("h2",{id:"promote-the-patch"},"Promote the patch"),(0,n.kt)("p",null,"Now that you have validated the patch, you can push the patch to all devices by promoting it to production from the ",(0,n.kt)("a",{parentName:"p",href:"https://console.shorebird.dev"},"Shorebird console"),'. Navigate to the release details page and click on the "Go Live" button.'),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/shorebirdtech/docs/assets/8855632/70fa5176-4e6a-4d7a-b820-6b24eca2c27a",alt:"go-live"})),(0,n.kt)("p",null,"At this point, you have a setup which allows you to preview patches locally before promoting them to production \ud83c\udf89"))}h.isMDXComponent=!0}}]);