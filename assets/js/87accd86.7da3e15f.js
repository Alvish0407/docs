"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[563],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},h="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),h=p(a),u=n,m=h["".concat(s,".").concat(u)]||h[u]||c[u]||o;return a?r.createElement(m,i(i({ref:t},d),{},{components:a})):r.createElement(m,i({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[h]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2699:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2,title:"iOS | Flavors",sidebar_label:"\ud83c\udf4e iOS",description:"Push patches to multiple flavors on iOS"},i="Flavors",l={unversionedId:"guides/flavors/ios",id:"guides/flavors/ios",title:"iOS | Flavors",description:"Push patches to multiple flavors on iOS",source:"@site/docs/guides/flavors/ios.md",sourceDirName:"guides/flavors",slug:"/guides/flavors/ios",permalink:"/guides/flavors/ios",draft:!1,editUrl:"https://github.com/shorebirdtech/docs/tree/main/docs/guides/flavors/ios.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"iOS | Flavors",sidebar_label:"\ud83c\udf4e iOS",description:"Push patches to multiple flavors on iOS"},sidebar:"tutorialSidebar",previous:{title:"\ud83e\udd16 Android",permalink:"/guides/flavors/android"},next:{title:"\ud83e\uddbf Hybrid Apps",permalink:"/guides/hybrid-app"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a Project",id:"create-a-project",level:2},{value:"Configure Flavors",id:"configure-flavors",level:2},{value:"Initialize Shorebird",id:"initialize-shorebird",level:2},{value:"Create a release",id:"create-a-release",level:2},{value:"Preview the release",id:"preview-the-release",level:2},{value:"Promote the patch",id:"promote-the-patch",level:2},{value:"Adding new flavors",id:"adding-new-flavors",level:2}],d={toc:p},h="wrapper";function c(e){let{components:t,...a}=e;return(0,n.kt)(h,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"flavors"},"Flavors"),(0,n.kt)("p",null,"This guide will walk through how to setup an app in which there are 2 flavors: ",(0,n.kt)("inlineCode",{parentName:"p"},"internal")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"stable"),". It will cover how to validate a patch on the internal flavor and then promote the patch to the stable flavor on iOS."),(0,n.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("p",null,"This guide assumes the Shorebird command-line is installed on your machine and that you are logged into an account. Refer to the ",(0,n.kt)("a",{parentName:"p",href:"/"},"getting started")," instructions for more information."),(0,n.kt)("h2",{id:"create-a-project"},"Create a Project"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"In this guide, we'll go through the process of creating a new project from scratch. To apply these changes to an existing project, skip this step and read ahead.")),(0,n.kt)("p",null,"Create a new project using ",(0,n.kt)("inlineCode",{parentName:"p"},"flutter create flavors"),"."),(0,n.kt)("h2",{id:"configure-flavors"},"Configure Flavors"),(0,n.kt)("p",null,"Next, edit the iOS project to support two flavors: ",(0,n.kt)("inlineCode",{parentName:"p"},"internal")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"stable")," by following the instructions in the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/deployment/flavors#creating-flavors-in-ios"},"Flutter documentation"),"."),(0,n.kt)("h2",{id:"initialize-shorebird"},"Initialize Shorebird"),(0,n.kt)("p",null,"Next, initialize Shorebird in the current project via ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird init"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"shorebird init\n")),(0,n.kt)("p",null,"The generated ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird.yaml")," should look something like:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"# This file is used to configure the Shorebird updater used by your application.\n# Learn more at https://shorebird.dev\n# This file should be checked into version control.\n\n# This is the unique identifier assigned to your app.\n# It is used by your app to request the correct patches from Shorebird servers.\napp_id: ee322dc4-3dc2-4324-90a9-04c40a62ae76\nflavors:\n  internal: ee322dc4-3dc2-4324-90a9-04c40a62ae76\n  stable: 904bd3d5-3526-4c1c-a832-7ac23c95302d\n")),(0,n.kt)("p",null,"Since the project contains flavors, ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird init")," generates an app per flavor."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"You can view your apps at ",(0,n.kt)("a",{parentName:"p",href:"https://console.shorebird.dev"},"console.shorebird.dev"),".")),(0,n.kt)("h2",{id:"create-a-release"},"Create a release"),(0,n.kt)("p",null,"Now that we've created our apps on shorebird, we need to create releases (one for each flavor). To create a release, we'll use the ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird release ios-alpha")," command."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"# Create a release for the internal flavor\nshorebird release ios-alpha --flavor internal\n\n# Create a release for the stable flavor\nshorebird release ios-alpha --flavor stable\n")),(0,n.kt)("p",null,"We can verify the releases were created successfully by visiting ",(0,n.kt)("a",{parentName:"p",href:"https://console.shorebird.dev/"},"Shorebird console"),"."),(0,n.kt)("h2",{id:"preview-the-release"},"Preview the release"),(0,n.kt)("p",null,"Next, preview the app release locally on a device or emulator, use ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird preview"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"# Preview the release for the internal flavor.\nshorebird preview --app-id ee322dc4-3dc2-4324-90a9-04c40a62ae76 --release-version 1.0.0+1\n\n# Preview the release for the stable flavor.\nshorebird preview --app-id 904bd3d5-3526-4c1c-a832-7ac23c95302d --release-version 1.0.0+1\n")),(0,n.kt)("p",null,"This will download the releases and run them on your device."),(0,n.kt)("p",null,"In addition to previewing the releases locally, you should also ",(0,n.kt)("a",{parentName:"p",href:"/guides/release/ios#upload-to-the-app-store"},"submit the generated app bundles to the App Store"),". In this case, both apps can be part of the internal test flavor and only the stable variant should be promoted to production."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"internal")," variant should only be used for internal testing/validation."),(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"stable")," variant should be shipped to end users in production.\n:::")),(0,n.kt)("h2",{parentName:"admonition",id:"creating-a-patch"},"Creating a patch"),(0,n.kt)("p",{parentName:"admonition"},"Now that we have our internal and stable releases on the Play Store, we can create a patch using ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird patch ios-alpha"),". For the sake of this example, let's adjust the app theme to use ",(0,n.kt)("inlineCode",{parentName:"p"},"deepOrange")," as the seed color in ",(0,n.kt)("inlineCode",{parentName:"p"},"lib/main.dart"),":"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-diff"},'class MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: \'Flutter Demo\',\n      theme: ThemeData(\n        // This is the theme of your application.\n        //\n        // TRY THIS: Try running your application with "flutter run". You\'ll see\n        // the application has a blue toolbar. Then, without quitting the app,\n        // try changing the seedColor in the colorScheme below to Colors.green\n        // and then invoke "hot reload" (save your changes or press the "hot\n        // reload" button in a Flutter-supported IDE, or press "r" if you used\n        // the command line to start the app).\n        //\n        // Notice that the counter didn\'t reset back to zero; the application\n        // state is not lost during the reload. To reset the state, use hot\n        // restart instead.\n        //\n        // This works for code too, not just values: Most code changes can be\n        // tested with just a hot reload.\n-        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n+        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepOrange),\n        useMaterial3: true,\n      ),\n      home: const MyHomePage(title: \'Flutter Demo Home Page\'),\n    );\n  }\n}\n'))),(0,n.kt)("p",null,"Typically ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird patch")," should be used to fix critical bugs.\n:::"),(0,n.kt)("p",null,"Now that we've applied the changes, let's patch the ",(0,n.kt)("inlineCode",{parentName:"p"},"internal")," variant:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"shorebird patch ios-alpha --flavor internal\n")),(0,n.kt)("p",null,"We can validate the patch by visiting ",(0,n.kt)("a",{parentName:"p",href:"https://console.shorebird.dev/"},"Shorebird console")," then select the internal release or re-launching the internal release."),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"If you are testing locally, you don't need to re-run ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird preview")," -- just re-launch the app from the device or emulator directly.")),(0,n.kt)("p",null,"The first time the app is re-launched, we should still see the purple theme and Shorebird will detect and install the patch in the background. Kill and re-launch the app a second time to see the applied patch."),(0,n.kt)("p",null,"If all went well, you should see the patch was applied after re-launching the app a second time. All devices that have the internal variant of the app installed should also receive the patch \ud83c\udf89"),(0,n.kt)("h2",{id:"promote-the-patch"},"Promote the patch"),(0,n.kt)("p",null,"Once you have validated the patch internally, you can promote the patch to the stable variant via:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"shorebird patch ios-alpha --flavor stable\n")),(0,n.kt)("p",null,"At this point, you have a setup which allows you to push patches to internal testers before promoting them to production \ud83c\udf89"),(0,n.kt)("p",null,"The full source code for this example can be found ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/shorebirdtech/samples/tree/main/flavors"},"here"),"."),(0,n.kt)("h2",{id:"adding-new-flavors"},"Adding new flavors"),(0,n.kt)("p",null,"If you want to add a new flavor to your project after initializing Shorebird, you can do so by following the same steps as before."),(0,n.kt)("p",null,"Edit the iOS project to add a third flavor, ",(0,n.kt)("inlineCode",{parentName:"p"},"beta"),", by following the instructions in the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/deployment/flavors#creating-flavors-in-ios"},"Flutter documentation"),"."),(0,n.kt)("p",null,"Add this to your ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird.yaml")," by running ",(0,n.kt)("inlineCode",{parentName:"p"},"shorebird init"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"$ shorebird init\n\u2713 Detecting product flavors (0.6s)\nNew flavors detected: beta\n\u2713 Fetching apps (0.1s)\n\u2713 Flavors added to shorebird.yaml (0.2s)\n")),(0,n.kt)("p",null,"The resulting shorebird yaml:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-diff"},"app_id: ee322dc4-3dc2-4324-90a9-04c40a62ae76\nflavors:\n  internal: ee322dc4-3dc2-4324-90a9-04c40a62ae76\n  stable: 904bd3d5-3526-4c1c-a832-7ac23c95302d\n+ beta: a41f8226-4b46-45d6-9e19-b14d0cf17bdc\n")))}c.isMDXComponent=!0}}]);