"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[109],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),p=u(n),c=o,m=p["".concat(l,".").concat(c)]||p[c]||d[c]||a;return n?r.createElement(m,i(i({ref:t},h),{},{components:n})):r.createElement(m,i({ref:t},h))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1165:(e,t,n)=>{n.d(t,{ZP:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={toc:[]},i="wrapper";function s(e){let{components:t,...n}=e;return(0,o.kt)(i,(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Most Shorebird functionality, like creating releases and patches, requires being authenticated. In order to authenticate with Shorebird in CI, you will need to generate a CI token."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"shorebird login:ci\n")),(0,o.kt)("p",null,"You will be prompted to go through a similar OAuth Flow as when using ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird login"),", however, ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird login:ci")," will not store any credentials on your device. Instead, a Shorebird token will be generated for you to use in CI."),(0,o.kt)("p",null,"The output should look something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ shorebird login:ci\nThe Shorebird CLI needs your authorization to manage apps, releases, and patches on your behalf.\n\nIn a browser, visit this URL to log in:\n\nhttps://accounts.google.com/o/oauth2/v2/auth...\n\nWaiting for your authorization...\n\n\ud83c\udf89 Success! Use the following token to login on a CI server:\n\n<SHOREBIRD_TOKEN>\n\nExample:\n\nexport SHOREBIRD_TOKEN="$SHOREBIRD_TOKEN" && shorebird patch android\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"SHOREBIRD_TOKEN")," is a secret and should not be committed directly in your source code or shared publicly.")))}s.isMDXComponent=!0},6846:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var r=n(7462),o=(n(7294),n(3905)),a=n(1165);const i={sidebar_position:1,title:"\ud83d\udc19 GitHub",description:"Integrate Shorebird into your GitHub workflow"},s="GitHub Workflow Integration",l={unversionedId:"ci/github",id:"ci/github",title:"\ud83d\udc19 GitHub",description:"Integrate Shorebird into your GitHub workflow",source:"@site/docs/ci/github.mdx",sourceDirName:"ci",slug:"/ci/github",permalink:"/ci/github",draft:!1,editUrl:"https://github.com/shorebirdtech/docs/tree/main/docs/ci/github.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"\ud83d\udc19 GitHub",description:"Integrate Shorebird into your GitHub workflow"},sidebar:"tutorialSidebar",previous:{title:"\u2705 Continuous Integration",permalink:"/ci"},next:{title:"\u2728 Codemagic",permalink:"/ci/codemagic"}},u={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Authentication",id:"authentication",level:2},{value:"Create Releases",id:"create-releases",level:2},{value:"Create Patches",id:"create-patches",level:2},{value:"\ud83e\udd16 Fully Automated Workflow Example",id:"-fully-automated-workflow-example",level:2},{value:"\ud83e\udd45 Goal",id:"-goal",level:3},{value:"\ud83d\udcdd Prerequisites",id:"-prerequisites",level:3},{value:"\ud83d\ude80 Getting Started",id:"-getting-started",level:3},{value:"\ud83d\udee0\ufe0f Setting up GitHub Actions",id:"\ufe0f-setting-up-github-actions",level:2},{value:"\ud83c\udfac Summary",id:"-summary",level:3}],p={toc:h},d="wrapper";function c(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"github-workflow-integration"},"GitHub Workflow Integration"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/shorebirdtech/setup-shorebird"},"Setup Shorebird")," GitHub Action allows you to integrate Shorebird into your existing GitHub Workflows."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"\u2705 Shorebird CLI is installed on your machine"),(0,o.kt)("p",null,"\u2705 You are logged into a Shorebird account."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Refer to the ",(0,o.kt)("a",{parentName:"p",href:"/"},"getting started")," instructions for more information.")),(0,o.kt)("h2",{id:"quick-start"},"Quick Start"),(0,o.kt)("p",null,"To integrate Shorebird into your CI, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"setup-shorebird")," action. The ",(0,o.kt)("inlineCode",{parentName:"p"},"setup-shorebird")," action downloads Shorebird and adds it to the system path."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Shorebird Workflow Example\n\non:\n  workflow_dispatch:\n\njobs:\n  example:\n    defaults:\n      run:\n        shell: bash\n\n    runs-on: ubuntu-latest\n\n    steps:\n      # Use the setup-shorebird action to configure Shorebird\n      - name: \ud83d\udc26 Setup Shorebird\n        uses: shorebirdtech/setup-shorebird@v1\n\n      # Now we're able to use Shorebird CLI in our workflow\n      - name: \ud83d\ude80 Use Shorebird\n        run: shorebird --version\n")),(0,o.kt)("p",null,"In the above workflow, we're using the ",(0,o.kt)("inlineCode",{parentName:"p"},"setup-shorebird")," action to configure Shorebird in our CI and in subsequent steps we can execute any Shorebird commands."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Currently ",(0,o.kt)("inlineCode",{parentName:"p"},"setup-shorebird")," only supports the latest stable version of shorebird.")),(0,o.kt)("h2",{id:"authentication"},"Authentication"),(0,o.kt)(a.ZP,{mdxType:"CIAuthentication"}),(0,o.kt)("p",null,"Next, copy the generated ",(0,o.kt)("inlineCode",{parentName:"p"},"SHOREBIRD_TOKEN")," and navigate to your GitHub repository secrets via:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'"Settings" -> "Secrets and variables" -> "Actions"'),"."),(0,o.kt)("p",null,"Then, click ",(0,o.kt)("inlineCode",{parentName:"p"},'"New repository secret"')," and paste your ",(0,o.kt)("inlineCode",{parentName:"p"},"SHOREBIRD_TOKEN"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name: SHOREBIRD_TOKEN\nsecret: <THE GENERATED SHOREBIRD_TOKEN>\n")),(0,o.kt)("p",null,"Now we can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"SHOREBIRD_TOKEN")," in our GitHub workflow to perform authenticated functions such as creating patches \ud83c\udf89"),(0,o.kt)("h2",{id:"create-releases"},"Create Releases"),(0,o.kt)("p",null,"The simplest way to create a release is using the official Shorebird GitHub Actions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/marketplace/actions/setup-shorebird"},"Setup Shorebird GitHub Action"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/marketplace/actions/shorebird-release"},"Shorebird Release GitHub Action"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Shorebird Release\n\non:\n  workflow_dispatch:\n\nenv:\n  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}\n\njobs:\n  release:\n    defaults:\n      run:\n        shell: bash\n\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: \ud83d\udcda Git Checkout\n        uses: actions/checkout@v3\n\n      - name: \ud83d\udc26 Setup Shorebird\n        uses: shorebirdtech/setup-shorebird@v1\n\n      - name: \ud83d\ude80 Shorebird Release\n        uses: shorebirdtech/shorebird-release@v0\n        with:\n          platform: android # or 'ios'\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird-release")," action also outputs the release version:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: \ud83d\ude80 Shorebird Release\n  id: shorebird-release\n  uses: shorebirdtech/shorebird-release@v0\n  with:\n    platform: android # or 'ios'\n\n- name: \ud83d\udcdd Output Release Version\n  run: echo ${{ steps.shorebird-release.outputs.release-version }}\n"))),(0,o.kt)("h2",{id:"create-patches"},"Create Patches"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Shorebird Patch\n\non:\n  workflow_dispatch:\n\nenv:\n  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}\n\njobs:\n  patch:\n    defaults:\n      run:\n        shell: bash\n\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: \ud83d\udcda Git Checkout\n        uses: actions/checkout@v3\n\n      - name: \ud83d\udc26 Setup Shorebird\n        uses: shorebirdtech/setup-shorebird@v1\n\n      # Note: all signing information (key.properties, etc.) must be set up on\n      # this runner for `shorebird patch android` to work.\n      - name: \ud83d\ude80 Shorebird Patch\n        uses: shorebirdtech/shorebird-patch@v0\n        with:\n          platform: android # or 'ios'\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird-patch")," action also outputs the patch number:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: \ud83d\ude80 Shorebird Patch\n  id: shorebird-patch\n  uses: shorebirdtech/shorebird-patch@v0\n  with:\n    platform: android # or 'ios'\n\n- name: \ud83d\udcdd Output Patch Version\n  run: echo ${{ steps.shorebird-patch.outputs.patch-number }}\n"))),(0,o.kt)("h2",{id:"-fully-automated-workflow-example"},"\ud83e\udd16 Fully Automated Workflow Example"),(0,o.kt)("p",null,"A fully automated workflow between your project repository and the CI service can allow developers\nto trigger deploys of your application just by pushing to the project repository,\nstreamlining the development workflow, which can reduce the chance of error due to\nrepetitive, manual tasks."),(0,o.kt)("p",null,"There are several ways of setting this up, and in many instances, how it is set up will depending\non how the git workflow of your project is structured, or which CI service is used, among other\nfactors."),(0,o.kt)("p",null,"This guide is a simple proposal for setting up a Fully automated workflow using GitHub Actions. It\nis intentionally simple so that it can be easily adapted to different requirements and contexts."),(0,o.kt)("h3",{id:"-goal"},"\ud83e\udd45 Goal"),(0,o.kt)("p",null,"We will be implementing an automation in a project that have the following goals:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Any branches created off from ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," that starts with the prefix ",(0,o.kt)("inlineCode",{parentName:"li"},"release/")," will trigger a\nrelease at Shorebird."),(0,o.kt)("li",{parentName:"ul"},"Any additional commits on those branches will trigger patches.")),(0,o.kt)("h3",{id:"-prerequisites"},"\ud83d\udcdd Prerequisites"),(0,o.kt)("p",null,"Before anything, if you don't have a Shorebird account, be sure to create one at\n",(0,o.kt)("a",{parentName:"p",href:"https://shorebird.dev"},"shorebird.dev")," (Don't worry, it is free to start have a generous quota\nthat is way more than enough for this guide)."),(0,o.kt)("p",null,"You will also need a GitHub account and a project repository created. If you don't have an account\nyet, create one at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com"},"GitHub"),", and create a new repository, which for this guide\nwe will call ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird_automated_workflow"),"."),(0,o.kt)("h3",{id:"-getting-started"},"\ud83d\ude80 Getting Started"),(0,o.kt)("p",null,"First thing, lets create a new Flutter project simply by running:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"flutter create shorebird_automated_workflow\n")),(0,o.kt)("p",null,"Be sure to initialize your project as a git repository:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd shorebird_automated_workflow\ngit init\ngit remote add origin <THE_URL_OF_YOUR_REPOSITORY>\n")),(0,o.kt)("p",null,"Next we need to initialize shorebird in it! Check out the ",(0,o.kt)("a",{parentName:"p",href:"/code_push/initialize"},"Code Push Getting Started")," guide for more info."),(0,o.kt)("h2",{id:"\ufe0f-setting-up-github-actions"},"\ud83d\udee0\ufe0f Setting up GitHub Actions"),(0,o.kt)("p",null,"We provide a collection of official GitHub Actions to help you with the integration. For this guide\nwe will be using ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird-setup"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird-release")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"shorebird-patch"),", you can learn more\nabout them at the beginning of this page."),(0,o.kt)("p",null,"Create a new file at ",(0,o.kt)("inlineCode",{parentName:"p"},".github/workflows/shorebird_android.yml")," with the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"name: Shorebird Android\n\non:\n  push:\n    branches:\n      - releases/*\n\nenv:\n  SHOREBIRD_TOKEN: ${{ secrets.SHOREBIRD_TOKEN }}\n\njobs:\n  shorebird_android:\n    defaults:\n      run:\n        shell: bash\n\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: \ud83d\udcda Git Checkout\n        uses: actions/checkout@v3\n\n      - name: \ud83d\udc26 Setup Shorebird\n        uses: shorebirdtech/setup-shorebird@v1\n\n      - name: \ud83d\ude80 Shorebird Release\n        if: ${{ github.event.created }}\n        uses: shorebirdtech/shorebird-release@v0\n        with:\n          platform: android\n\n      - name: \ud83d\ude80 Shorebird Patch\n        if: ${{ !github.event.created }}\n        uses: shorebirdtech/shorebird-patch@v0\n        with:\n          platform: android\n")),(0,o.kt)("p",null,"Let's take a closer look at the above workflow.\nThe workflow will be triggered whenever a push is made to a branch that starts with ",(0,o.kt)("inlineCode",{parentName:"p"},"releases/"),"."),(0,o.kt)("p",null,"It will then run the clone of the repository and setup the Shorebird CLI."),(0,o.kt)("p",null,"Next the workflow is divided into two conditional steps. If the push is the one that created the\nbranch, it will trigger a release. Otherwise it will trigger a patch."),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"SHOREBIRD_TOKEN")," is used as an environment variable. This is a secret that\nshould be stored in your repository settings. If you have not already configured the secrets, check out the\n",(0,o.kt)("a",{parentName:"p",href:"/ci/github"},"GitHub Integration Documentation")," mentioned above.")),(0,o.kt)("p",null,"That's it! You should be able to push the changes to your repository and see the workflow\nrunning in the actions tab of your repository."),(0,o.kt)("p",null,"Give it a try! Create a new branch called ",(0,o.kt)("inlineCode",{parentName:"p"},"releases/1.0.0")," and push it to your repository:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ git checkout -b releases/1.0.0\n$ git push origin releases/1.0.0\n")),(0,o.kt)("p",null,"That will trigger the action! Once the workflow finishes, check the ",(0,o.kt)("a",{parentName:"p",href:"https://console.shorebird.dev"},"Shorebird console"),"\nand you should see a new release for your app."),(0,o.kt)("p",null,"Next lets make the following change in our app:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-diff"},'class MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: \'Flutter Demo\',\n      theme: ThemeData(\n        // This is the theme of your application.\n        //\n        // Try running your application with "flutter run". You\'ll see the\n        // application has a blue toolbar. Then, without quitting the app, try\n        // changing the primarySwatch below to Colors.green and then invoke\n        // "hot reload" (press "r" in the console where you ran "flutter run",\n        // or simply save your changes to "hot reload" in a Flutter IDE).\n        // Notice that the counter didn\'t reset back to zero; the application\n        // is not restarted.\n-       primarySwatch: Colors.blue,\n+       primarySwatch: Colors.green,\n      ),\n      home: const MyHomePage(title: \'Flutter Demo Home Page\'),\n    );\n  }\n}\n')),(0,o.kt)("p",null,"And commit and push it!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ git add .\n$ git commit -m "Change primarySwatch to green"\n$ git push origin releases/1.0.0\n')),(0,o.kt)("p",null,"That will trigger the action again, but now a patch will be created \ud83c\udf89."),(0,o.kt)("h3",{id:"-summary"},"\ud83c\udfac Summary"),(0,o.kt)("p",null,"As mentioned, the workflow presented here is just one way of setting up a fully automated workflow.\nFeel free to adapt it based on your teams needs and existing processes."),(0,o.kt)("p",null,"Some ways the workflow can be expanded are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Instead of directly committing to the branch after the release was made. Developers would land their\nchanges and fixes on their main branch, and then ",(0,o.kt)("inlineCode",{parentName:"li"},"cherry-pick")," it to the release branch!"),(0,o.kt)("li",{parentName:"ul"},"Both ",(0,o.kt)("inlineCode",{parentName:"li"},"shorebird-release")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"shorebird-patch")," returns the version/patch-number created. The workflow\ncould be expanded in order for tags to be created in the repository, using the version number returned\nallowing snapshots of the code to be easily identified.")),(0,o.kt)("p",null,"See this workflow in action by checking out our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/shorebirdtech/time_shift"},"Time Shift App"),"."),(0,o.kt)("p",null,"Thank you for reading this guide! If you have any questions or suggestions, feel free to reach out\nto us at our ",(0,o.kt)("a",{parentName:"p",href:"https://discord.gg/shorebird"},"Discord"),"."))}c.isMDXComponent=!0}}]);