"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[902],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(a),u=r,m=c["".concat(s,".").concat(u)]||c[u]||h[u]||o;return a?n.createElement(m,i(i({ref:t},p),{},{components:a})):n.createElement(m,i({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},8606:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1,title:"Android | Flavors",sidebar_label:"\ud83e\udd16 Android",description:"Push patches to multiple flavors on Android"},i="Flavors",l={unversionedId:"guides/flavors/android",id:"guides/flavors/android",title:"Android | Flavors",description:"Push patches to multiple flavors on Android",source:"@site/docs/guides/flavors/android.md",sourceDirName:"guides/flavors",slug:"/guides/flavors/android",permalink:"/guides/flavors/android",draft:!1,editUrl:"https://github.com/shorebirdtech/docs/tree/main/docs/guides/flavors/android.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Android | Flavors",sidebar_label:"\ud83e\udd16 Android",description:"Push patches to multiple flavors on Android"},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udf67 Flavors",permalink:"/guides/flavors"},next:{title:"\ud83c\udf4e iOS",permalink:"/guides/flavors/ios"}},s={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Create a Project",id:"create-a-project",level:2},{value:"Configure Flavors",id:"configure-flavors",level:2},{value:"Initialize Shorebird",id:"initialize-shorebird",level:2},{value:"Create a release",id:"create-a-release",level:2},{value:"Preview the release",id:"preview-the-release",level:2},{value:"Creating a patch",id:"creating-a-patch",level:2},{value:"Promote the patch",id:"promote-the-patch",level:2},{value:"Adding new flavors",id:"adding-new-flavors",level:2}],p={toc:d},c="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"flavors"},"Flavors"),(0,r.kt)("p",null,"This guide will walk through how to setup an app in which there are 2 deployment flavors: ",(0,r.kt)("inlineCode",{parentName:"p"},"internal")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"stable"),". It will cover how to validate a patch on the internal flavor and then promote the patch to the stable flavor on Android."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This guide assumes the Shorebird command-line is installed on your machine and that you are logged into an account. Refer to the ",(0,r.kt)("a",{parentName:"p",href:"/"},"getting started")," instructions for more information."),(0,r.kt)("h2",{id:"create-a-project"},"Create a Project"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In this guide, we'll go through the process of creating a new project from scratch. To apply these changes to an existing project, skip this step and read ahead.")),(0,r.kt)("p",null,"Create a new project using ",(0,r.kt)("inlineCode",{parentName:"p"},"flutter create flavors"),"."),(0,r.kt)("h2",{id:"configure-flavors"},"Configure Flavors"),(0,r.kt)("p",null,"Next, edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"android/app/build.gradle")," to contain two productFlavors:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'defaultConfig {\n    ...\n}\n\n+    flavorDimensions "track"\n+    productFlavors {\n+        internal {\n+            dimension "track"\n+            applicationIdSuffix ".internal"\n+            manifestPlaceholders = [applicationLabel: "[Internal] Shorebird Example"]\n+        }\n+        stable {\n+            dimension "track"\n+            manifestPlaceholders = [applicationLabel: "Shorebird Example"]\n+        }\n+    }\n\nbuildTypes {\n  ...\n}\n')),(0,r.kt)("p",null,"Lastly, edit ",(0,r.kt)("inlineCode",{parentName:"p"},"android/app/src/main/AndroidManifest.xml")," to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"applicationLabel")," so that we can differentiate the two apps easily:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'<manifest xmlns:android="http://schemas.android.com/apk/res/android">\n-  <application android:label="flavors" android:name="${applicationName}" android:icon="@mipmap/ic_launcher">\n+  <application android:label="${applicationLabel}" android:name="${applicationName}" android:icon="@mipmap/ic_launcher">\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To learn more about configuring ",(0,r.kt)("inlineCode",{parentName:"p"},"productFlavors")," refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/build/build-variants#product-flavors"},"Android Developer documentation"),".")),(0,r.kt)("h2",{id:"initialize-shorebird"},"Initialize Shorebird"),(0,r.kt)("p",null,"Next, initialize Shorebird in the current project via ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird init"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"shorebird init\n")),(0,r.kt)("p",null,"The generated ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird.yaml")," should look something like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# This file is used to configure the Shorebird updater used by your application.\n# Learn more at https://shorebird.dev\n# This file should be checked into version control.\n\n# This is the unique identifier assigned to your app.\n# It is used by your app to request the correct patches from Shorebird servers.\napp_id: ee322dc4-3dc2-4324-90a9-04c40a62ae76\nflavors:\n  internal: ee322dc4-3dc2-4324-90a9-04c40a62ae76\n  stable: 904bd3d5-3526-4c1c-a832-7ac23c95302d\n")),(0,r.kt)("p",null,"Because the project contains flavors, ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird init")," generates an app per flavor and you can validate the release flavor by visiting ",(0,r.kt)("a",{parentName:"p",href:"https://console.shorebird.dev/"},"Shorebird console"),"."),(0,r.kt)("h2",{id:"create-a-release"},"Create a release"),(0,r.kt)("p",null,"Now that we've created our apps on shorebird, we need to create releases (one for each flavor). To create a release, we'll use the ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird release android")," command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Create a release for the internal flavor\nshorebird release android --flavor internal\n\n# Create a release for the stable flavor\nshorebird release android --flavor stable\n")),(0,r.kt)("p",null,"We can verify the releases were created successfully by visiting ",(0,r.kt)("a",{parentName:"p",href:"https://console.shorebird.dev/"},"Shorebird console"),"."),(0,r.kt)("h2",{id:"preview-the-release"},"Preview the release"),(0,r.kt)("p",null,"Next, preview the app release locally on a device or emulator, use ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird preview"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Preview the release for the internal flavor.\nshorebird preview --app-id ee322dc4-3dc2-4324-90a9-04c40a62ae76 --release-version 1.0.0+1\n\n# Preview the release for the stable flavor.\nshorebird preview --app-id 904bd3d5-3526-4c1c-a832-7ac23c95302d --release-version 1.0.0+1\n")),(0,r.kt)("p",null,"This will download the releases and run them on your device."),(0,r.kt)("p",null,"In addition to previewing the releases locally, you should also ",(0,r.kt)("a",{parentName:"p",href:"/guides/release/android#upload-to-the-play-store"},"submit the generated app bundles to the Play Store"),". In this case, both apps can be part of the internal test flavor and only the stable variant should be promoted to production."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"internal")," variant should only be used for internal testing/validation."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"stable")," variant should be shipped to end users in production."))),(0,r.kt)("h2",{id:"creating-a-patch"},"Creating a patch"),(0,r.kt)("p",null,"Now that we have our internal and stable releases on the Play Store, we can create a patch using ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird patch android"),". For the sake of this example, let's adjust the app theme to use ",(0,r.kt)("inlineCode",{parentName:"p"},"deepOrange")," as the seed color in ",(0,r.kt)("inlineCode",{parentName:"p"},"lib/main.dart"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'class MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  // This widget is the root of your application.\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: \'Flutter Demo\',\n      theme: ThemeData(\n        // This is the theme of your application.\n        //\n        // TRY THIS: Try running your application with "flutter run". You\'ll see\n        // the application has a blue toolbar. Then, without quitting the app,\n        // try changing the seedColor in the colorScheme below to Colors.green\n        // and then invoke "hot reload" (save your changes or press the "hot\n        // reload" button in a Flutter-supported IDE, or press "r" if you used\n        // the command line to start the app).\n        //\n        // Notice that the counter didn\'t reset back to zero; the application\n        // state is not lost during the reload. To reset the state, use hot\n        // restart instead.\n        //\n        // This works for code too, not just values: Most code changes can be\n        // tested with just a hot reload.\n-        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n+        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepOrange),\n        useMaterial3: true,\n      ),\n      home: const MyHomePage(title: \'Flutter Demo Home Page\'),\n    );\n  }\n}\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Typically ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird patch")," should be used to fix critical bugs.")),(0,r.kt)("p",null,"Now that we've applied the changes, let's patch the ",(0,r.kt)("inlineCode",{parentName:"p"},"internal")," variant:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"shorebird patch android --flavor internal\n")),(0,r.kt)("p",null,"We can validate the patch by visiting ",(0,r.kt)("a",{parentName:"p",href:"https://console.shorebird.dev/"},"Shorebird console")," then select the internal release or re-launching the internal release."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you are testing locally, you don't need to re-run ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird preview")," -- just re-launch the app from the device or emulator directly.")),(0,r.kt)("p",null,"The first time the app is re-launched, we should still see the purple theme and shorebird will detect and install the patch in the background. Kill and re-launch the app a second time to see the applied patch."),(0,r.kt)("p",null,"If all went well, you should see the patch was applied after re-launching the app a second time. All devices that have the internal variant of the app installed should also receive the patch \ud83c\udf89"),(0,r.kt)("h2",{id:"promote-the-patch"},"Promote the patch"),(0,r.kt)("p",null,"Once you have validated the patch internally, you can promote the patch to the stable variant via:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"shorebird patch android --flavor stable\n")),(0,r.kt)("p",null,"At this point, you have a setup which allows you to push patches to internal testers before promoting them to production \ud83c\udf89"),(0,r.kt)("p",null,"The full source code for this example can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/shorebirdtech/samples/tree/main/flavors"},"here"),"."),(0,r.kt)("h2",{id:"adding-new-flavors"},"Adding new flavors"),(0,r.kt)("p",null,"If you want to add a new flavor to your project after initializing Shorebird, you can do so by following the same steps as before."),(0,r.kt)("p",null,"In build.gradle:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'defaultConfig {\n    ...\n}\n\n    flavorDimensions "track"\n    productFlavors {\n        internal {\n            dimension "track"\n            applicationIdSuffix ".internal"\n            manifestPlaceholders = [applicationLabel: "[Internal] Shorebird Example"]\n        }\n+       beta {\n+           dimension "track"\n+           applicationIdSuffix ".beta"\n+           manifestPlaceholders = [applicationLabel: "[Beta] Shorebird Example"]\n+       }\n        stable {\n            dimension "track"\n            manifestPlaceholders = [applicationLabel: "Shorebird Example"]\n        }\n    }\n\nbuildTypes {\n  ...\n}\n')),(0,r.kt)("p",null,"Add this to your ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird.yaml")," by running ",(0,r.kt)("inlineCode",{parentName:"p"},"shorebird init"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ shorebird init\n\u2713 Detecting product flavors (0.6s)\nNew flavors detected: beta\n\u2713 Fetching apps (0.1s)\n\u2713 Flavors added to shorebird.yaml (0.2s)\n")),(0,r.kt)("p",null,"The resulting shorebird yaml:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"app_id: ee322dc4-3dc2-4324-90a9-04c40a62ae76\nflavors:\n  internal: ee322dc4-3dc2-4324-90a9-04c40a62ae76\n  stable: 904bd3d5-3526-4c1c-a832-7ac23c95302d\n+ beta: a41f8226-4b46-45d6-9e19-b14d0cf17bdc\n")))}h.isMDXComponent=!0}}]);